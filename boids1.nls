globals [
  num-turtles
  alignment-radius
  cohesion-radius
  separation-radius ; Added for separation behavior
  heading-weight ; Adjusted to include weight for separation
]

turtles-own [
  align-vector
  cohesion-vector
  separation-vector ; Added for separation behavior
]

to setup
  clear-all
  set num-turtles 75
  set alignment-radius 10
  set cohesion-radius 15
  set separation-radius 5 ; Smaller radius for separation
  set heading-weight [0.33 0.33 0.34] ; Adjust weights for alignment, cohesion, and separation
  
  ; Create 100 turtles at random positions and headings
  create-turtles num-turtles [
    setxy random-xcor random-ycor
    set heading random 360
    set shape "triangle"
    set color blue
  ]
  reset-ticks
end

to go
  ask turtles [
    calculate-align-vector
    calculate-cohesion-vector
    calculate-separation-vector ; Calculate separation vector
    update-heading
    move
  ]
  tick
end

; Calculate the average heading of nearby turtles for alignment
to calculate-align-vector
  let nearby-turtles turtles in-radius alignment-radius
  ifelse any? nearby-turtles [
    set align-vector mean [heading] of nearby-turtles
  ][
    set align-vector heading
  ]
end

; Calculate the average position of nearby turtles for cohesion
to calculate-cohesion-vector
  let nearby-turtles turtles in-radius cohesion-radius
  ifelse any? nearby-turtles [
    let avg-x mean [xcor] of nearby-turtles
    let avg-y mean [ycor] of nearby-turtles
    set cohesion-vector atan (avg-x - xcor) (avg-y - ycor)
  ][
    set cohesion-vector heading
  ]
end

; Calculate the average vector pointing away from nearby turtles for separation
to calculate-separation-vector
  let nearby-turtles turtles in-radius separation-radius
  ifelse any? nearby-turtles [
    let x-offsets mean [xcor - [xcor] of myself] of nearby-turtles
    let y-offsets mean [ycor - [ycor] of myself] of nearby-turtles
    set separation-vector atan x-offsets y-offsets + 180 ; Adjust direction to point away
  ][
    set separation-vector heading
  ]
end

; Update the turtle's heading based on the weighted average of alignment, cohesion, and separation
to update-heading
  let align-component item 0 heading-weight * align-vector
  let cohesion-component item 1 heading-weight * cohesion-vector
  let separation-component item 2 heading-weight * separation-vector
  let new-heading (align-component + cohesion-component + separation-component) / sum heading-weight
  set heading new-heading
end

to move
  ;; Move forward by 1 step
  fd 1
  ;; Wrap horizontally
  if xcor > max-pxcor [
    set xcor min-pxcor + (xcor - max-pxcor - 1)
  ]
  if xcor < min-pxcor [
    set xcor max-pxcor - (min-pxcor - xcor - 1)
  ]
  ;; Wrap vertically
  if ycor > max-pycor [
    set ycor min-pycor + (ycor - max-pycor - 1)
  ]
  if ycor < min-pycor [
    set ycor max-pycor - (min-pycor - ycor - 1)
  ]
end